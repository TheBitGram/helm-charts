apiVersion: v1
kind: Service
metadata:
  name: unused-service-for-token-introspection-proxy
  {{- if .Values.namespace }}
  namespace: {{ .Values.namespace }}
  {{- end }}
spec:
  type: ExternalName
  externalName: {{ .Values.proxy.introspectionHost }}
---
{{- $fullName := include "introspection-proxy.fullname" . -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  {{- if .Values.namespace }}
  namespace: {{ .Values.namespace }}
  {{- end }}
  labels:
    {{- include "introspection-proxy.labels" . | nindent 4 }}
  
  annotations:
    {{- with .Values.proxy.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    kubernetes.io/ingress.class: nginx-external
    # Set up Access Token Translation using Curity's Phantom Token Module
    # See https://github.com/curityio/nginx_phantom_token_module for more info
    nginx.ingress.kubernetes.io/server-snippet: |
      location {{ .Values.proxy.name }} {
        # use a variable to prevent only resolving the DNS once
        # see http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
        set $idsvr_host "{{ .Values.proxy.introspectionHost }}";

        proxy_set_header Host $idsvr_host;
        proxy_pass https://$idsvr_host{{ .Values.proxy.introspectionPath }};
        proxy_redirect off;
        
        # proxy_cache_methods POST; 
        # proxy_cache api_cache; 
        # proxy_cache_key $request_body; 
        # proxy_ignore_headers Set-Cookie; 
      }
spec:
  rules:
    {{- range .Values.proxy.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
        - path: /unused-path-for-token-introspection-proxy
          pathType: ImplementationSpecific
          backend:
            service:
              name: unused-service-for-token-introspection-proxy
              port:
                number: 80
    {{- end }}
